# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Tests_on_Flask_server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install flask
        pip install requests
        pip install pymongo
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run server
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python3 main.py CtOnqgBWZfqmglpj &
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        cd tests/
        python3 server_tests.py http://127.0.0.1:5000
        
  Tests_on_flask_container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Create docker image
      run: |
        docker build . -t omerap12/server
    - name: Create container from image
      run: |
        docker run -p 5000:5000 omerap12/server &
    - name: Test with pytest
      run: |
        cd tests/
        python3 server_tests.py http://127.0.0.1:5000
        
      
    

  
